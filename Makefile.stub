#  Copyright 2013 Jesse 'Jeaye' Wilkerson
#  See licensing in LICENSE file, or at:
#      http://www.opensource.org/licenses/BSD-3-Clause
#
#  File: Makefile.stub
#  Author: Jesse 'Jeaye' Wilkerson
#  Description:
#  	Makefile for Q³ that's modified by configure
#

# Set by configure
PROJ_DIR=%PROJ_DIR%

ifneq (${MODE}, debug)
ifneq (${MODE}, release)
	MODE=release # Default to release
endif
endif

ifeq (${MODE}, debug)
	CONFIGS=--cfg debug_shader --cfg check_gl
	OPTIMIZATION=--opt-level 0 
	VERSION_NAME=${COLOR_YELLOW}DEBUG${COLOR_OFF}
else
	CONFIGS=--cfg release_shader
	OPTIMIZATION=--opt-level 3
	VERSION_NAME=${COLOR_PURPLE}RELEASE${COLOR_OFF}
endif

# Determine system
UNAME=$(shell uname)

# Get git HEAD
export COMMIT=$(shell cd ${PROJ_DIR} && git rev-parse --short HEAD)
export VERSION=0.2

# Colors
COLOR_OFF=$(shell tput sgr0)
COLOR_RED=$(shell tput setaf 1)
COLOR_YELLOW=$(shell tput setaf 3)
COLOR_GREEN=$(shell tput setaf 2)
COLOR_PURPLE=$(shell tput setaf 5)

# Output colorizing
ECHO_PREFIX=${COLOR_GREEN}»»»${COLOR_OFF}
ifeq ($(UNAME), Linux)
	ECHO=echo
else
	ECHO=echo 
endif

SHARED_LIBS=-L. -L ${PROJ_DIR}/bin -Lbuild/q3/shared
CLIENT_LIBS=${SHARED_LIBS} -Lbuild/q3/client -Lbuild/glfw_static -Lbuild/glfw-rs -Lbuild/rust-opengles -Lbuild/stb-image -Lbuild/gl-rs -L/opt/local/lib
SERVER_LIBS=${SHARED_LIBS} -Lbuild/q3/server -Lbuild/ncurses-rs -L/opt/local/lib

# Shared
SHARED_LOG_SRC=$(shell find ${PROJ_DIR}/src/shared/log -type f -name '*.rs')
SHARED_CONSOLE_SRC=$(shell find ${PROJ_DIR}/src/shared/console -type f -name '*.rs')
SHARED_MATH_SRC=$(shell find ${PROJ_DIR}/src/shared/math -type f -name '*.rs')
SHARED_OBJ_SRC=$(shell find ${PROJ_DIR}/src/shared/obj -type f -name '*.rs')

# Client
CLIENT_GFX_SRC=$(shell find ${PROJ_DIR}/src/client/gfx -type f -name '*.rs')
CLIENT_MD5_SRC=$(shell find ${PROJ_DIR}/src/client/md5 -type f -name '*.rs')
CLIENT_UI_SRC=$(shell find ${PROJ_DIR}/src/client/ui -type f -name '*.rs')
CLIENT_STATE_SRC=$(shell find ${PROJ_DIR}/src/client/state -type f -name '*.rs')

# Server
SERVER_UI_SRC=$(shell find ${PROJ_DIR}/src/server/ui -type f -name '*.rs')

# Dummy modules
SHARED_MODULES=.build_shared_log .build_shared_console .build_shared_math .build_shared_obj
CLIENT_MODULES=.build_client_gfx .build_client_md5 .build_client_ui .build_client_state
SERVER_MODULES=.build_server_ui

RUST_C=${PROJ_DIR}/bin/rustc

.SILENT:

.PHONY: all setup_client client setup_server server clean

all: clean client server

### CLIENT

setup_client:
	${ECHO} "${ECHO_PREFIX} ${VERSION_NAME} Q³ client [${VERSION}.${COMMIT}]"
	mkdir -p bin
	mkdir -p build/q3/shared
	mkdir -p build/q3/client

client: setup_client ${SHARED_MODULES} ${CLIENT_MODULES}
	${ECHO} "${ECHO_PREFIX} Linking client"
	${RUST_C} ${PROJ_DIR}/src/client/main.rs -o bin/client ${CLIENT_LIBS} ${CONFIGS} ${OPTIMIZATION}
	${ECHO} "${ECHO_PREFIX} Success"

.build_client_gfx: ${CLIENT_GFX_SRC}
	${ECHO} "${ECHO_PREFIX} Building client.gfx"
	rm -f build/q3/libgfx*
	${RUST_C} ${PROJ_DIR}/src/client/gfx/mod.rs --out-dir build/q3/client ${CLIENT_LIBS} ${CONFIGS} ${OPTIMIZATION}
	touch .build_client_gfx

.build_client_md5: ${CLIENT_MD5_SRC} .build_client_gfx
	${ECHO} "${ECHO_PREFIX} Building client.md5"
	rm -f build/q3/libmd5*
	${RUST_C} ${PROJ_DIR}/src/client/md5/mod.rs --out-dir build/q3/client ${CLIENT_LIBS} ${CONFIGS} ${OPTIMIZATION}
	touch .build_client_md5

.build_client_ui: ${CLIENT_UI_SRC} .build_client_md5
	${ECHO} "${ECHO_PREFIX} Building client.ui"
	rm -f build/q3/libui*
	${RUST_C} ${PROJ_DIR}/src/client/ui/mod.rs --out-dir build/q3/client ${CLIENT_LIBS} ${CONFIGS} ${OPTIMIZATION}
	touch .build_client_ui

.build_client_state: ${CLIENT_STATE_SRC} .build_client_ui
	${ECHO} "${ECHO_PREFIX} Building client.state"
	rm -f build/q3/libstate*
	${RUST_C} ${PROJ_DIR}/src/client/state/mod.rs --out-dir build/q3/client ${CLIENT_LIBS} ${CONFIGS} ${OPTIMIZATION}
	touch .build_client_state

### SERVER

setup_server:
	${ECHO} "${ECHO_PREFIX} ${VERSION_NAME} Q³ server [${VERSION}.${COMMIT}]"
	mkdir -p bin
	mkdir -p build/q3/shared
	mkdir -p build/q3/server

server: setup_server ${SHARED_MODULES} ${SERVER_MODULES}
	${ECHO} "${ECHO_PREFIX} Linking server"
	${RUST_C} ${PROJ_DIR}/src/server/main.rs -o bin/server ${SERVER_LIBS} ${CONFIGS} ${OPTIMIZATION}
	${ECHO} "${ECHO_PREFIX} Success"

.build_server_ui: ${SERVER_UI_SRC}
	${ECHO} "${ECHO_PREFIX} Building server.ui"
	rm -f build/q3/server/libui*
	${RUST_C} ${PROJ_DIR}/src/server/ui/mod.rs --out-dir build/q3/server ${SERVER_LIBS} ${CONFIGS} ${OPTIMIZATION}
	touch .build_server_ui

### SHARED

.build_shared_log: ${SHARED_LOG_SRC}
	${ECHO} "${ECHO_PREFIX} Building shared.log"
	rm -f build/q3/liblog*
	${RUST_C} ${PROJ_DIR}/src/shared/log/mod.rs --out-dir build/q3/shared ${SHARED_LIBS} ${CONFIGS} ${OPTIMIZATION}
	touch .build_shared_log

.build_shared_console: ${SHARED_CONSOLE_SRC} .build_shared_log
	${ECHO} "${ECHO_PREFIX} Building shared.console"
	rm -f build/q3/libconsole*
	${RUST_C} ${PROJ_DIR}/src/shared/console/mod.rs --out-dir build/q3/shared ${SHARED_LIBS} ${CONFIGS} ${OPTIMIZATION}
	touch .build_shared_console

.build_shared_math: ${SHARED_MATH_SRC} .build_shared_console
	${ECHO} "${ECHO_PREFIX} Building shared.math"
	rm -f build/q3/libmath*
	${RUST_C} ${PROJ_DIR}/src/shared/math/mod.rs --out-dir build/q3/shared ${SHARED_LIBS} ${CONFIGS} ${OPTIMIZATION}
	touch .build_shared_math

.build_shared_obj: ${SHARED_OBJ_SRC} .build_shared_math
	${ECHO} "${ECHO_PREFIX} Building shared.obj"
	rm -f build/q3/libobj*
	${RUST_C} ${PROJ_DIR}/src/shared/obj/mod.rs --out-dir build/q3/shared ${SHARED_LIBS} ${CONFIGS} ${OPTIMIZATION}
	touch .build_shared_obj

### MISC

clean:
	${ECHO} "${ECHO_PREFIX} Cleaning"
	-rm -f bin/client bin/server
	-rm -rf build/q3
	-rm -f ${SHARED_MODULES} ${CLIENT_MODULES} ${SERVER_MODULES}

